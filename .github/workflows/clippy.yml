name: Clippy Analysis

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      
      - name: Generate Clippy report
        run: |
          # Only run clippy on our code, not dependencies
          cargo clippy --all-targets --all-features -- -D warnings > clippy_output.txt 2>&1 || true
          
          # Format the output to be more readable
          echo "## Clippy Report" > clippy_summary.md
          echo '```' >> clippy_summary.md
          
          # Extract only error and warning lines and strip ANSI color codes
          grep -E "^(error|warning):|-->|" clippy_output.txt | sed 's/\x1B\[[0-9;]*[mK]//g' >> clippy_summary.md
          
          # Count number of errors and warnings
          ERROR_COUNT=$(grep -c "^error:" clippy_output.txt || echo 0)
          WARNING_COUNT=$(grep -c "^warning:" clippy_output.txt || echo 0)
          
          echo "" >> clippy_summary.md
          echo "## Summary" >> clippy_summary.md
          echo "* Errors: $ERROR_COUNT" >> clippy_summary.md
          echo "* Warnings: $WARNING_COUNT" >> clippy_summary.md
          echo '```' >> clippy_summary.md
          
          if [ "$ERROR_COUNT" -gt 0 ] || [ "$WARNING_COUNT" -gt 0 ]; then
            echo "Clippy found issues!"
            cat clippy_summary.md
            exit 1
          else
            echo "âœ… Clippy is happy with your code!"
          fi
      
      - name: Comment PR with Clippy report
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('clippy_summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });

      - name: Fail if Clippy found errors
        run: |
          if grep -q "^error:" clippy_output.txt; then
            exit 1
          fi 